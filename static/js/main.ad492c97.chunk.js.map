{"version":3,"sources":["Components/contatctForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","ContactList","findContact","removeContact","map","contact","className","styles","item","span","name","number","btn","type","onClick","id","ContactForm","isThereContact","addNewContact","useState","setName","setNumber","form","onSubmit","e","preventDefault","alert","label","input","onChange","target","value","pattern","title","required","Filter","filter","App","contactsList","setСontactsList","setFilter","useEffect","contacts","JSON","parse","localStorage","getItem","setItem","stringify","newContact","uuidv4","some","toLowerCase","includes","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad492c97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3leno\",\"label\":\"ContactForm_label__LMq9E\",\"btn\":\"ContactForm_btn__ipfch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2eqBn\",\"item\":\"ContactList_item__1DL8s\",\"span\":\"ContactList_span__18uDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3kn9m\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ findContact, removeContact }) => {\n  return (\n    <ul>\n      {findContact.map((contact) => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            <span className={styles.span}>{contact.name}:</span>\n            &nbsp;\n            <span className={styles.span}>{contact.number}</span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => removeContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  findContact: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ isThereContact, addNewContact }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const changeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereContact(name)) {\n      return alert(`${name} уже добавлен в список контактов`);\n    }\n    addNewContact({ name, number });\n    reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name:\n        <input\n          className={styles.input}\n          onChange={changeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number:\n        <input\n          className={styles.input}\n          onChange={changeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n  isThereContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ onChange, filter }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name:\n      <input\n        className={styles.input}\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./contactList/ContactList\";\nimport ContactForm from \"./contatctForm/ContactForm\";\nimport Filter from \"./filter/Filter\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [contactsList, setСontactsList] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      setСontactsList([...contactsList, ...contacts]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contactsList));\n  }, [contactsList]);\n\n  const addNewContact = (newContact) => {\n    setСontactsList([...contactsList, { ...newContact, id: uuidv4() }]);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    name === \"filter\" && setFilter(value);\n  };\n\n  const removeContact = (idx) => {\n    setСontactsList((contactsList) => {\n      return contactsList.filter((contact) => contact.id !== idx);\n    });\n  };\n\n  const findContact = (e) => {\n    return contactsList.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const isThereContact = (name) =>\n    contactsList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  return (\n    <div className=\"block\">\n      <h1>Phonebook</h1>\n\n      <ContactForm\n        addNewContact={addNewContact}\n        isThereContact={isThereContact}\n      />\n\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} onChange={handleChange} />\n\n      <ContactList findContact={findContact()} removeContact={removeContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}